from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter

from keyboards import reply_21, reply
from function_21 import get_card, list_card

message21_router = Router()


@message21_router.message(F.text == "üÉè21")
async def rule_world(message: types.Message):
    await message.answer(
        text="–•–æ—Ç–∏—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã?", reply_markup=reply_21.ready_21
    )


@message21_router.message(F.text == "üìó –ü—Ä–∞–≤–∏–ª–∞")
async def rules(message: types.Message):
    await message.answer(
        text=f'–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã —Å –±–æ—Ç–æ–º ü§ñ\n\n'
             f'1Ô∏è‚É£ –¶–µ–ª—å –∏–≥—Ä—ã –Ω–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ —á–µ–º –≤–∞–º —Å–æ–ø–µ—Ä–Ω–∏–∫ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –ø—Ä–∏–≤—ã—Å–∏—Ç—å 21 –æ—á–∫–æ, —Ç–æ—Ç –∫—Ç–æ –ø–µ—Ä–≤—ã–π –Ω–∞–±–µ—Ä–µ—Ç 21 –æ—á–∫–æ, –≤—ã–∏–≥—Ä–∞–µ—Ç\n\n'
             f'2Ô∏è‚É£ –í –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã –≤–∞–º –∏ –¥–∏–ª–ª–µ—Ä—É(–≤–∞—à–∏–º –¥–∏–ª–ª–µ—Ä–æ–º –±—É–¥–µ—Ç —Å–∞–º –±–æ—Ç) –±—É–¥—É—Ç –≤—ã–¥–∞–Ω—ã –ø–æ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ –∏–∑ –∫–æ–ª–æ–¥—ã –∫–∞—Ä—Ç. –ö–æ–ª–∞–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 52 –∫–∞—Ä—Ç\n\n'
             f'3Ô∏è‚É£ –ö–∞–∂–¥–∞—è –≤–∞—à–∞ –∫–∞—Ä—Ç–∞ –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ –∫–∞–∫–æ–º—É —Ç–æ –æ—á–∫—É\n'
             f'–¢—É–∑ ‚Äì 11. –ö–æ—Ä–æ–ª—å ‚Äì 4. –î–∞–º–∞ ‚Äì 3. –í–∞–ª–µ—Ç ‚Äì 2. –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –Ω—É–º–µ—Ä–æ–≤–∞–Ω–∏—é —Å–∞–º–æ–π –∫–∞—Ä—Ç—ã.\n\n'
             f'4Ô∏è‚É£ –í –Ω–∞—á–∞–ª–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Ö–æ–¥–æ–≤ –≤–∞–º –∏ –¥–∏–ª–ª–µ—Ä—É –±—É–¥–µ—Ç –¥–∞–≤–∞—Ç—å—Å—è –≤—ã–±–æ—Ä –≤–∑—è—Ç—å –µ—â–µ –æ–¥–Ω—É –∫–∞—Ä—Ç—É –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥\n\n'
             f'5Ô∏è‚É£ –ü–µ—Ä–µ–¥ —Ö–æ–¥–æ–º –≤–∞–º –∏ –¥–∏–ª–ª–µ—Ä—É –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –∫–∞—Ä—Ç—ã –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –≤—Å–µ—Ö –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π\n\n'
             f'6Ô∏è‚É£ –í—Å–µ –æ—á–∫–∏ –≤–∞—à–∏—Ö –∫–∞—Ä—Ç –±—É–¥—É—Ç —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –µ—Å–ª–∏ –ø—Ä–∏ –≤–∑—è—Ç–∏–∏ –∫–∞—Ä—Ç—ã –≤—ã –ø—Ä–∏–≤—ã—Å–∏—Ç–µ 21 –æ—á–∫–æ –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç–µ, –µ—Å–ª–∏ –æ—á–∫–∏ –ø—Ä–∏–≤—ã—Å–∏—Ç –¥–∏–ª–ª–µ—Ä –ø—Ä–æ–≥—Ä–∞–µ—Ç –æ–Ω\n\n'
             f'7Ô∏è‚É£ –ï—Å–ª–∏ –æ–±–∞ –∏–≥—Ä–æ–∫–∞ –ø—Ä–æ–ø—É—Å—Ç—è—Ç —Ö–æ–¥ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏—Å—Ç—è –∏ –≤—ã–∏–≥—Ä–∞–µ—Ç —Ç–æ—Ç –∫—Ç–æ –±–æ–ª—å—à–µ –Ω–∞–±—Ä–∞–ª –æ—á–∫–æ–≤',
        reply_markup=reply_21.ready_p_21
    )


@message21_router.message(F.text == "–ùa—áa—Ç—å!")
async def start_game(message: types.Message, state: FSMContext):
    await message.answer(
        text=f'–° –∫–µ–º –±—É–¥–µ—Ç–µ –∏–≥—Ä–∞—Ç—å', reply_markup=reply_21.players
    )


@message21_router.message(F.text == "ü§ñ –° –±–æ—Ç–æ–º")
async def start_with_bot(message: types.Message, state: FSMContext):
    cards_bot = []
    cards_user = []
    cards1_user_key, cards1_user_value = get_card()
    cards_user.append(cards1_user_value)
    list_card.remove(cards1_user_key)
    card1_bot_key, card1_bot_value = get_card()
    cards_bot.append(card1_bot_value)
    list_card.remove(card1_bot_key)
    await message.answer(
        text=f'–í—ã –∏ –¥–∏–ª–ª–µ—Ä –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É:\n'
             f'–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n'
             f'{cards1_user_key} = {cards1_user_value}'
    )
    await message.answer(
        text=f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
             f'?',
        reply_markup=reply_21.choosing_an_action
    )
    await state.update_data({
        "cards_bot": cards_bot,
        "cards_user": cards_user,
        "cards1_user_key": cards1_user_key,
        "card_values": list_card,
        "card1_bot_key": card1_bot_key,
        "cards1_user_value": cards1_user_value
    })
    await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
    await state.set_state("round2")


@message21_router.message(StateFilter('round2'))
async def round2(message: types.Message, state: FSMContext):
    if message.text == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É":
        data = await state.get_data()
        cards_bot2 = data.get("cards_bot")
        cards_user2 = data.get("cards_user")
        data.get("card_values")
        cards1_user_key = data.get("cards1_user_key")
        card1_bot_key = data.get("card1_bot_key")
        cards1_user_value = data.get("cards1_user_value")
        cards2_user_key, cards2_user_value = get_card()
        cards_user2.append(cards2_user_value)
        list_card.remove(cards2_user_key)
        card2_bot_key, card2_bot_value = get_card()
        cards_bot2.append(card2_bot_value)
        list_card.remove(card2_bot_key)
        await message.answer(
            text=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É\n"
                 f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                 f"{cards1_user_key} = {cards1_user_value}\n"
                 f"{cards2_user_key} = {cards2_user_value}"
        )
        if sum(cards_user2) == 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ 21 –æ—á–∫–æ\n"
                                      f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            await state.clear()
        else:
            await message.answer(
                text=f'–î–∏–ª–ª–µ—Ä –≤–∑—è–ª –∫–∞—Ä—Ç—É\n'
                     f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
                     f'{card1_bot_key}\n'
                     f'?',
                reply_markup=reply_21.choosing_an_action
            )
        if sum(cards_bot2) == 21:
            await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n"
                                      f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            await state.clear()
        else:
            await state.update_data({
                "cards_bot2": cards_bot2,
                "cards_user2": cards_user2,
                "cards2_user_key": cards2_user_key,
                "cards2_user_value": cards2_user_value,
                "card2_bot_key": card2_bot_key
            })
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
        await state.set_state("round3")
    elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥":
        data = await state.get_data()
        cards_bot2 = data.get("cards_bot")
        cards_user2 = data.get("cards_user")
        data.get("card_values")
        cards1_user_key = data.get("cards1_user_key")
        cards1_user_value = data.get("cards1_user_value")
        card1_bot_key = data.get("card1_bot_key")
        card2_user_key = ""
        cards_user2.append(0)
        card2_bot_key, card2_bot_value = get_card()
        cards_bot2.append(card2_bot_value)
        list_card.remove(card2_bot_key)
        await message.answer(
            text=f"–î–∏–ª–ª–µ—Ä –≤–∑—è–ª –∫–∞—Ä—Ç—É\n"
                 f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                 f"{cards1_user_key} = {cards1_user_value}"
        )
        await message.answer(
            text=f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
                 f'{card1_bot_key}\n'
                 f'?',
            reply_markup=reply_21.choosing_an_action
        )
        if sum(cards_bot2) == 21:
            await message.answer(text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n'
                                      f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏',
                                 reply_markup=reply.game_selection
                                 )
            await message.answer(
                text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                     f'{card1_bot_key}\n'
                     f'{card2_bot_key}\n'
            )
            return await state.clear()
        else:
            await state.update_data({
                "cards_bot2": cards_bot2,
                "card2_bot_key": card2_bot_key,
                "card2_user_key": card2_user_key,
                "cards_user2": cards_user2
            })
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
        await state.set_state("round3")


@message21_router.message(StateFilter("round3"))
async def round3(message: types.Message, state: FSMContext):
    data = await state.get_data()
    cards_bot3 = data.get("cards_bot2")
    cards_user3 = data.get("cards_user2")
    data.get("card_values")
    cards1_user_key = data.get("cards1_user_key")
    cards2_user_key = data.get("cards2_user_key")
    card1_bot_key = data.get("card1_bot_key")
    card2_bot_key = data.get("card2_bot_key")
    cards1_user_value = data.get("cards1_user_value")
    cards2_user_value = data.get("cards2_user_value")
    if message.text == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É":
        cards3_user_key, cards3_user_value = get_card()
        cards_user3.append(cards3_user_value)
        list_card.remove(cards3_user_key)
        if sum(cards_bot3) < 17:
            card3_bot_key, card3_bot_value = get_card()
            cards_bot3.append(card3_bot_value)
            list_card.remove(card3_bot_key)
            bot_move = 1
        else:
            card3_bot_key, not_card3_bot_value = "", 0
            cards_bot3.append(not_card3_bot_value)
            bot_move = 0
        await message.answer(
            text=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É\n"
                 f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                 f"{cards1_user_key} = {cards1_user_value}\n"
                 f"{cards2_user_key} = {cards2_user_value}\n"
                 f"{cards3_user_key} = {cards3_user_value}"
        )
        if sum(cards_user3) > 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n"
                                      f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        elif sum(cards_user3) == 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ 21 –æ—á–∫–æ\n"
                                      f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        else:
            if bot_move:
                if sum(cards_bot3) > 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –ø—Ä–∏–≤—ã—Å–∏–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}'
                    )
                    return await state.clear()
                elif sum(cards_bot3) == 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}'
                    )
                    return await state.clear()
                else:
                    await message.answer(
                        text=f'–î–∏–ª–ª–µ–ª –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—É\n'
                             f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'?',
                        reply_markup=reply_21.choosing_an_action
                    )
            elif bot_move == 0:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥\n',
                    reply_markup=reply_21.choosing_an_action
                )
        await state.update_data({
            "cards_bot3": cards_bot3,
            "cards_user3": cards_user3,
            "cards3_user_key": cards3_user_key,
            "cards3_user_value": cards3_user_value,
            "card3_bot_key": card3_bot_key
        })
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
        await state.set_state("round4")
    elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥":
        cards3_user_key, cards3_user_value = "Pass", 0
        cards_user3.append(cards3_user_value)
        data.get("card_values")
        if sum(cards_bot3) < 17:
            card3_bot_key, card3_bot_value = get_card()
            cards_bot3.append(card3_bot_value)
            list_card.remove(card3_bot_key)
            await message.answer(
                text=f"–î–∏–ª–ª–µ—Ä –≤–∑—è–ª –∫–∞—Ä—Ç—É\n"
                     f"{card1_bot_key}\n"
                     f"{card2_bot_key}\n"
                     f"?"
            )
            if sum(cards_bot3) > 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n'
                         f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}'
                )
                return await state.clear()
            elif sum(cards_bot3) == 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n'
                         f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}'
                )
                return await state.clear()
            else:
                await message.answer(
                    text=f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                         f"{cards1_user_key} = {cards1_user_value}\n"
                         f"{cards2_user_key} = {cards2_user_value}\n",
                    reply_markup=reply_21.choosing_an_action
                )
            await state.update_data({
                "cards_bot3": cards_bot3,
                "cards_user3": cards_user3,
                "cards3_user_key": cards3_user_key,
                "cards3_user_value": cards3_user_value,
                "card3_bot_key": card3_bot_key
            })
            await message.answer(text="–í–∞—à —Ö–æ–¥", reply_markup=reply_21.choosing_an_action)
            await state.set_state("round4")
        else:
            await message.answer(text="–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥")
            if sum(cards_bot3) > sum(cards_user3):
                await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_bot3)}\n"
                                          f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            elif sum(cards_bot3) < sum(cards_user3):
                await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_user3)}\n"
                                          f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            else:
                await message.answer(text=f"–£ –≤–∞—Å —Å –¥–∏–ª–ª–µ—Ä–æ–∏ —Ä–∞–≤–Ω—ã–µ –æ—á–∫–∏ = {sum(cards_bot3)}\n"
                                          f"–ù–∏—á—å—è",
                                     reply_markup=reply.game_selection)
                return await state.clear()


@message21_router.message(StateFilter("round4"))
async def round4(message: types.Message, state: FSMContext):
    data = await state.get_data()
    cards_bot4 = data.get("cards_bot3")
    cards_user4 = data.get("cards_user3")
    data.get("card_values")
    cards1_user_key = data.get("cards1_user_key")
    cards2_user_key = data.get("cards2_user_key")
    cards3_user_key = data.get("cards3_user_key")
    card1_bot_key = data.get("card1_bot_key")
    card2_bot_key = data.get("card2_bot_key")
    card3_bot_key = data.get("card3_bot_key")
    cards1_user_value = data.get("cards1_user_value")
    cards2_user_value = data.get("cards2_user_value")
    cards3_user_value = data.get("cards3_user_value")
    if message.text == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É":
        cards4_user_key, cards4_user_value = get_card()
        cards_user4.append(cards4_user_value)
        list_card.remove(cards4_user_key)
        if sum(cards_bot4) < 17:
            card4_bot_key, card4_bot_value = get_card()
            cards_bot4.append(card4_bot_value)
            list_card.remove(card4_bot_key)
        else:
            card4_bot_key, not_card4_bot_value = "", 0
            cards_bot4.append(not_card4_bot_value)
        await message.answer(
            text=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É\n"
                 f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                 f"{cards1_user_key} = {cards1_user_value}\n"
                 f"{cards2_user_key} = {cards2_user_value}\n"
                 f"{cards3_user_key} = {cards3_user_value}\n"
                 f"{cards4_user_key} = {cards4_user_value}"
        )
        if sum(cards_user4) > 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n"
                                      f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        elif sum(cards_user4) == 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ 21 –æ—á–∫–æ\n"
                                      f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        else:
            if 0 not in cards_bot4:
                if sum(cards_bot4) > 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –ø—Ä–∏–≤—ã—Å–∏–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'{card4_bot_key}'
                    )
                    return await state.clear()
                elif sum(cards_bot4) == 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'{card4_bot_key}'
                    )
                    return await state.clear()
                else:
                    await message.answer(
                        text=f'–î–∏–ª–ª–µ–ª –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—É\n'
                             f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'?',
                        reply_markup=reply_21.choosing_an_action
                    )
            else:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥\n',
                    reply_markup=reply_21.choosing_an_action
                )
        await state.update_data({
            "cards_bot4": cards_bot4,
            "cards_user4": cards_user4,
            "cards4_user_key": cards4_user_key,
            "cards4_user_value": cards4_user_value,
            "card4_bot_key": card4_bot_key
        })
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
        await state.set_state("round5")
    elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥":
        cards4_user_key, cards4_user_value = "Pass", 0
        cards_user4.append(cards4_user_value)
        if sum(cards_bot4) < 17:
            card4_bot_key, card4_bot_value = get_card()
            cards_bot4.append(card4_bot_value)
            list_card.remove(card4_bot_key)
            await message.answer(
                text=f"–î–∏–ª–ª–µ—Ä –≤–∑—è–ª –∫–∞—Ä—Ç—É\n"
                     f"{card1_bot_key}\n"
                     f"{card2_bot_key}\n"
                     f"{card3_bot_key}"
                     f"?"
            )
            if sum(cards_bot4) > 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n'
                         f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}\n'
                         f'{card4_bot_key}'
                )
                return await state.clear()
            elif sum(cards_bot4) == 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ —Ä–∞–Ω—å—à–µ –≤–∞—Å\n'
                         f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}\n'
                         f'{card4_bot_key}'
                )
                return await state.clear()
            else:
                await message.answer(
                    text=f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                         f"{cards1_user_key} = {cards1_user_value}\n"
                         f"{cards2_user_key} = {cards2_user_value}\n"
                         f"{cards3_user_key} = {cards3_user_value}",
                    reply_markup=reply_21.choosing_an_action
                )
            await state.update_data({
                "cards_bot4": cards_bot4,
                "cards_user4": cards_user4,
                "cards4_user_key": cards4_user_key,
                "cards4_user_value": cards4_user_value,
                "card4_bot_key": card4_bot_key
            })
            await message.answer(text="–í–∞—à —Ö–æ–¥", reply_markup=reply_21.choosing_an_action)
            await state.set_state("round5")
        else:
            await message.answer(text="–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥")
            if sum(cards_bot4) > sum(cards_user4):
                await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_bot4)}\n"
                                          f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            elif sum(cards_bot4) < sum(cards_user4):
                await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_user4)}\n"
                                          f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            else:
                await message.answer(text=f"–£ –≤–∞—Å —Å –¥–∏–ª–ª–µ—Ä–æ–∏ —Ä–∞–≤–Ω—ã–µ –æ—á–∫–∏ = {sum(cards_bot4)}\n"
                                          f"–ù–∏—á—å—è",
                                     reply_markup=reply.game_selection)
                return await state.clear()


@message21_router.message(StateFilter("round5"))
async def round5(message: types.Message, state: FSMContext):
    data = await state.get_data()
    cards_bot5 = data.get("cards_bot4")
    cards_user5 = data.get("cards_user4")
    data.get("card_values")
    cards1_user_key = data.get("cards1_user_key")
    cards2_user_key = data.get("cards2_user_key")
    cards3_user_key = data.get("cards3_user_key")
    cards4_user_key = data.get("cards4_user_key")
    card1_bot_key = data.get("card1_bot_key")
    card2_bot_key = data.get("card2_bot_key")
    card3_bot_key = data.get("card3_bot_key")
    card4_bot_key = data.get("card4_bot_key")
    cards1_user_value = data.get("cards1_user_value")
    cards2_user_value = data.get("cards2_user_value")
    cards3_user_value = data.get("cards3_user_value")
    cards4_user_value = data.get("cards4_user_value")
    if message.text == "–í–∑—è—Ç—å –∫–∞—Ä—Ç—É":
        cards5_user_key, cards5_user_value = get_card()
        cards_user5.append(cards5_user_value)
        list_card.remove(cards5_user_key)
        if sum(cards_bot5) < 17:
            card5_bot_key, card5_bot_value = get_card()
            cards_bot5.append(card5_bot_value)
            list_card.remove(card5_bot_key)
        else:
            card5_bot_key, not_card5_bot_value = "", 0
            cards_bot5.append(not_card5_bot_value)
        await message.answer(
            text=f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É\n"
                 f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                 f"{cards1_user_key} = {cards1_user_value}\n"
                 f"{cards2_user_key} = {cards2_user_value}\n"
                 f"{cards3_user_key} = {cards3_user_value}\n"
                 f"{cards4_user_key} = {cards4_user_value}\n"
                 f"{cards5_user_key} = {cards5_user_value}"
        )
        if sum(cards_user5) > 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n"
                                      f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        elif sum(cards_user5) == 21:
            await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ 21 –æ—á–∫–æ\n"
                                      f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                 reply_markup=reply.game_selection
                                 )
            return await state.clear()
        else:
            if 0 not in cards_bot5:
                if sum(cards_bot5) > 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –ø—Ä–∏–≤—ã—Å–∏–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø–æ–±–µ–¥–∏–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'{card4_bot_key}\n'
                             f'{card5_bot_key}'
                    )
                    return await state.clear()
                elif sum(cards_bot5) == 21:
                    await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ\n"
                                              f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!!",
                                         reply_markup=reply.game_selection
                                         )
                    await message.answer(
                        text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'{card4_bot_key}\n'
                             f'{card5_bot_key}'
                    )
                    return await state.clear()
                else:
                    await message.answer(
                        text=f'–î–∏–ª–ª–µ–ª –ø–æ–ª—É—á–∏–ª –∫–∞—Ä—Ç—É\n'
                             f'–ö–∞—Ä—Ç—ã —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n'
                             f'{card1_bot_key}\n'
                             f'{card2_bot_key}\n'
                             f'{card3_bot_key}\n'
                             f'?',
                        reply_markup=reply_21.choosing_an_action
                    )
            else:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥\n',
                    reply_markup=reply_21.choosing_an_action
                )
        await state.update_data({
            "cards_bot5": cards_bot5,
            "cards_user5": cards_user5,
            "cards5_user_key": cards5_user_key,
            "cards5_user_value": cards5_user_value,
            "card5_bot_key": card5_bot_key
        })
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=reply_21.choosing_an_action)
        await state.set_state("round5")
    elif message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ö–æ–¥":
        cards5_user_key, cards5_user_value = "Pass", 0
        cards_user5.append(cards5_user_value)
        if sum(cards_bot5) < 17:
            card5_bot_key, card5_bot_value = get_card()
            cards_bot5.append(card5_bot_value)
            list_card.remove(card5_bot_key)
            await message.answer(
                text=f"–î–∏–ª–ª–µ—Ä –≤–∑—è–ª –∫–∞—Ä—Ç—É\n"
                     f"{card1_bot_key}\n"
                     f"{card2_bot_key}\n"
                     f"{card3_bot_key}\n"
                     f"{card4_bot_key}\n"
                     f"?"
            )
            if sum(cards_bot5) > 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ 21 –æ—á–∫–∞\n'
                         f'–í—ã –ø–æ–±–µ–¥–∏–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}\n'
                         f'{card4_bot_key}\n'
                         f'{card5_bot_key}'
                )
                return await state.clear()
            elif sum(cards_bot5) == 21:
                await message.answer(
                    text=f'–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª 21 –æ—á–∫–æ —Ä–∞–Ω—å—à–µ –≤–∞—Å\n'
                         f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏',
                    reply_markup=reply.game_selection
                )
                await message.answer(
                    text=f'–ö–∞—Ä—Ç—ã –¥–∏–ª–ª–µ—Ä–∞\n'
                         f'{card1_bot_key}\n'
                         f'{card2_bot_key}\n'
                         f'{card3_bot_key}\n'
                         f'{card4_bot_key}\n'
                         f'{card5_bot_key}'
                )
                return await state.clear()
            else:
                await message.answer(
                    text=f"–í–∞—à–∏ –∫–∞—Ä—Ç—ã\n"
                         f"{cards1_user_key} = {cards1_user_value}\n"
                         f"{cards2_user_key} = {cards2_user_value}\n"
                         f"{cards3_user_key} = {cards3_user_value}\n"
                         f"{cards4_user_key} = {cards4_user_value}",
                    reply_markup=reply_21.choosing_an_action
                )
            await state.update_data({
                "cards_bot5": cards_bot5,
                "cards_user5": cards_user5,
                "cards5_user_key": cards5_user_key,
                "cards5_user_value": cards5_user_value,
                "card5_bot_key": card5_bot_key
            })
            await message.answer(text="–í–∞—à —Ö–æ–¥", reply_markup=reply_21.choosing_an_action)
            await state.set_state("round5")
        else:
            await message.answer(text="–î–∏–ª–ª–µ—Ä –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥")
            if sum(cards_bot5) > sum(cards_user5):
                await message.answer(text=f"–î–∏–ª–ª–µ—Ä –Ω–∞–±—Ä–∞–ª –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_bot5)}\n"
                                          f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            elif sum(cards_bot5) < sum(cards_user5):
                await message.answer(text=f"–í—ã –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª—å—à–µ –æ—á–∫–æ–≤ = {sum(cards_user5)}\n"
                                          f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏",
                                     reply_markup=reply.game_selection)
                return await state.clear()
            else:
                await message.answer(text=f"–£ –≤–∞—Å —Å –¥–∏–ª–ª–µ—Ä–æ–∏ —Ä–∞–≤–Ω—ã–µ –æ—á–∫–∏ = {sum(cards_bot5)}\n"
                                          f"–ù–∏—á—å—è",
                                     reply_markup=reply.game_selection)
                return await state.clear()
